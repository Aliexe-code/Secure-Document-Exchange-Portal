package templates

templ Base(isAuthenticated bool, userName string, children templ.Component) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>Secure Document Exchange Portal</title>
			<script src="https://unpkg.com/htmx.org@1.9.10"></script>
			<script src="https://unpkg.com/htmx.org@1.9.10/dist/ext/ws.js"></script>
			<script src="https://cdn.tailwindcss.com"></script>
			<script>
				tailwind.config = {
					darkMode: 'class',
				}
				// Initialize theme from localStorage or system preference
				if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
					document.documentElement.classList.add('dark')
				} else {
					document.documentElement.classList.remove('dark')
				}
			</script>
		</head>
		<body class="bg-gray-100 dark:bg-gray-900 min-h-screen transition-colors duration-200">
			<div class="container mx-auto px-4 py-8">
				<header class="mb-8">
					<div class="flex justify-between items-center">
						<h1 class="text-3xl font-bold text-gray-800 dark:text-gray-100">Secure Document Exchange Portal</h1>
						<button 
							id="theme-toggle" 
							class="p-2 rounded-lg bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors"
							onclick="toggleTheme()"
							title="Toggle theme"
						>
							<svg id="theme-toggle-dark-icon" class="hidden w-5 h-5 text-gray-800 dark:text-gray-200" fill="currentColor" viewBox="0 0 20 20">
								<path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
							</svg>
							<svg id="theme-toggle-light-icon" class="hidden w-5 h-5 text-gray-800 dark:text-gray-200" fill="currentColor" viewBox="0 0 20 20">
								<path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path>
							</svg>
						</button>
					</div>
					<nav class="mt-4 flex space-x-4">
						if isAuthenticated {
							<span class="text-green-600 dark:text-green-400">Welcome, {userName}</span>
							<a href="/documents" class="text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300">Documents</a>
							<a href="/logout" class="text-red-600 dark:text-red-400 hover:text-red-800 dark:hover:text-red-300">Logout</a>
						} else {
							<a href="/login" class="text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300">Login</a>
							<a href="/register" class="text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300">Register</a>
						}
					</nav>
				</header>
				<main>
					<div id="content">
						@children
					</div>
				</main>
			</div>
			<script>
				function toggleTheme() {
					const html = document.documentElement;
					const isDark = html.classList.contains('dark');
					
					if (isDark) {
						html.classList.remove('dark');
						localStorage.theme = 'light';
					} else {
						html.classList.add('dark');
						localStorage.theme = 'dark';
					}
					updateThemeIcon();
				}

				function updateThemeIcon() {
					const isDark = document.documentElement.classList.contains('dark');
					const darkIcon = document.getElementById('theme-toggle-dark-icon');
					const lightIcon = document.getElementById('theme-toggle-light-icon');
					
					if (isDark) {
						darkIcon.classList.remove('hidden');
						lightIcon.classList.add('hidden');
					} else {
						darkIcon.classList.add('hidden');
						lightIcon.classList.remove('hidden');
					}
				}

				// Initialize icon on page load
				updateThemeIcon();
			</script>
		</body>
	</html>
}