package templates

import "fmt"

type Document struct {
	ID       string
	Filename string
	FileSize int64
	MimeType string
	CreatedAt string
}

templ DocumentListPage(documents []Document) {
	<div class="max-w-6xl mx-auto">
		<!-- Header Section -->
		<div class="bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6 md:p-8 border border-gray-200 dark:border-gray-700 mb-6">
			<div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
				<div>
					<h2 class="text-3xl font-bold text-gray-900 dark:text-gray-100 flex items-center">
						<svg class="w-8 h-8 mr-3 text-primary-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
						</svg>
						My Documents
					</h2>
					<p class="mt-1 text-sm text-gray-600 dark:text-gray-400">Securely store and share your files</p>
				</div>
				<button
					hx-get="/documents/upload"
					hx-target="#upload-form"
					hx-swap="innerHTML"
					class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-primary-600 to-primary-500 hover:from-primary-700 hover:to-primary-600 text-white font-medium rounded-lg shadow-lg hover:shadow-xl transition-all"
				>
					<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
					</svg>
					Upload Document
				</button>
			</div>
		</div>

		<!-- Upload Form Container -->
		<div id="upload-form" class="mb-6"></div>

		<!-- Documents List -->
		<div
			id="documents-list"
			hx-get="/api/documents"
			hx-trigger="load, documentUploaded"
			hx-swap="innerHTML"
			hx-indicator="#documents-list"
			class="min-h-[200px]"
		></div>

		<!-- Modals -->
		<div id="preview-modal"></div>
		<div id="share-modal"></div>
	</div>
}

templ DocumentList(documents []Document) {
	if len(documents) == 0 {
		<!-- Empty State -->
		<div class="bg-white dark:bg-gray-800 rounded-2xl shadow-lg border border-gray-200 dark:border-gray-700 p-12 text-center">
			<div class="mx-auto h-24 w-24 bg-gray-100 dark:bg-gray-700 rounded-full flex items-center justify-center mb-6">
				<svg class="w-12 h-12 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
				</svg>
			</div>
			<h3 class="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-2">No documents yet</h3>
			<p class="text-gray-600 dark:text-gray-400 mb-6">Get started by uploading your first document</p>
			<button
				hx-get="/documents/upload"
				hx-target="#upload-form"
				hx-swap="innerHTML"
				class="inline-flex items-center px-6 py-3 bg-primary-600 hover:bg-primary-700 text-white font-medium rounded-lg shadow-md hover:shadow-lg transition-all"
			>
				<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
				</svg>
				Upload First Document
			</button>
		</div>
	} else {
		<!-- Documents Grid -->
		<div class="grid grid-cols-1 gap-4">
			for _, doc := range documents {
				<div class="bg-white dark:bg-gray-800 rounded-xl shadow-md border border-gray-200 dark:border-gray-700 p-6 hover:shadow-xl transition-all group">
					<div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
						<!-- Document Info -->
						<div class="flex items-start space-x-4 flex-1 min-w-0">
							<!-- File Icon -->
							<div class="flex-shrink-0 w-12 h-12 bg-gradient-to-br from-primary-100 to-primary-200 dark:from-primary-900/30 dark:to-primary-800/30 rounded-lg flex items-center justify-center">
								if doc.MimeType == "application/pdf" {
									<svg class="w-6 h-6 text-primary-600 dark:text-primary-400" fill="currentColor" viewBox="0 0 20 20">
										<path fill-rule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4z" clip-rule="evenodd"></path>
									</svg>
								} else if doc.MimeType == "image/jpeg" || doc.MimeType == "image/png" || doc.MimeType == "image/gif" {
									<svg class="w-6 h-6 text-primary-600 dark:text-primary-400" fill="currentColor" viewBox="0 0 20 20">
										<path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd"></path>
									</svg>
								} else {
									<svg class="w-6 h-6 text-primary-600 dark:text-primary-400" fill="currentColor" viewBox="0 0 20 20">
										<path fill-rule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z" clip-rule="evenodd"></path>
									</svg>
								}
							</div>
							<!-- File Details -->
							<div class="flex-1 min-w-0">
								<h3 class="font-semibold text-gray-900 dark:text-gray-100 truncate text-lg group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors">
									{doc.Filename}
								</h3>
								<div class="mt-1 flex flex-wrap items-center gap-x-4 gap-y-1 text-sm text-gray-600 dark:text-gray-400">
									<span class="flex items-center">
										<svg class="w-4 h-4 mr-1 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
											<path d="M3 12v3c0 1.657 3.134 3 7 3s7-1.343 7-3v-3c0 1.657-3.134 3-7 3s-7-1.343-7-3z"></path>
											<path d="M3 7v3c0 1.657 3.134 3 7 3s7-1.343 7-3V7c0 1.657-3.134 3-7 3S3 8.657 3 7z"></path>
											<path d="M17 5c0 1.657-3.134 3-7 3S3 6.657 3 5s3.134-3 7-3 7 1.343 7 3z"></path>
										</svg>
										{fmt.Sprintf("%.2f MB", float64(doc.FileSize)/1024/1024)}
									</span>
									<span class="flex items-center">
										<svg class="w-4 h-4 mr-1 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
											<path fill-rule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4z" clip-rule="evenodd"></path>
										</svg>
										{doc.MimeType}
									</span>
									<span class="flex items-center">
										<svg class="w-4 h-4 mr-1 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
											<path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path>
										</svg>
										{doc.CreatedAt}
									</span>
								</div>
							</div>
						</div>

						<!-- Action Buttons -->
						<div class="flex items-center space-x-2 flex-shrink-0">
							<a
								href={fmt.Sprintf("/api/documents/%s/download", doc.ID)}
								class="inline-flex items-center px-4 py-2 bg-green-600 hover:bg-green-700 dark:bg-green-600 dark:hover:bg-green-500 text-white text-sm font-medium rounded-lg shadow-sm hover:shadow-md transition-all"
								title="Download"
							>
								<svg class="w-4 h-4 sm:mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
								</svg>
								<span class="hidden sm:inline">Download</span>
							</a>
							<button
								hx-get={fmt.Sprintf("/documents/%s/share", doc.ID)}
								hx-target="#share-modal"
								hx-swap="outerHTML"
								class="inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 dark:bg-blue-600 dark:hover:bg-blue-500 text-white text-sm font-medium rounded-lg shadow-sm hover:shadow-md transition-all"
								title="Share"
							>
								<svg class="w-4 h-4 sm:mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z"></path>
								</svg>
								<span class="hidden sm:inline">Share</span>
							</button>
							<button
								hx-delete={fmt.Sprintf("/api/documents/%s", doc.ID)}
								hx-confirm="Are you sure you want to delete this document? This action cannot be undone."
								hx-target="closest .group"
								hx-swap="outerHTML swap:500ms"
								class="inline-flex items-center px-4 py-2 bg-red-600 hover:bg-red-700 dark:bg-red-600 dark:hover:bg-red-500 text-white text-sm font-medium rounded-lg shadow-sm hover:shadow-md transition-all"
								title="Delete"
							>
								<svg class="w-4 h-4 sm:mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
								</svg>
								<span class="hidden sm:inline">Delete</span>
							</button>
						</div>
					</div>
				</div>
			}
		</div>
	}
}

templ UploadForm() {
	<div class="bg-white dark:bg-gray-800 rounded-2xl shadow-lg border border-gray-200 dark:border-gray-700 p-6 md:p-8 animate-slide-in">
		<div class="flex items-center justify-between mb-6">
			<div class="flex items-center">
				<div class="w-10 h-10 bg-primary-100 dark:bg-primary-900/30 rounded-lg flex items-center justify-center mr-3">
					<svg class="w-6 h-6 text-primary-600 dark:text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
					</svg>
				</div>
				<div>
					<h3 class="text-xl font-semibold text-gray-900 dark:text-gray-100">Upload New Document</h3>
					<p class="text-sm text-gray-600 dark:text-gray-400">Select a file to upload securely</p>
				</div>
			</div>
			<button
				onclick="this.closest('div[id=upload-form]').innerHTML = ''"
				class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors"
				title="Close"
			>
				<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
				</svg>
			</button>
		</div>

		<form
			hx-post="/api/documents"
			hx-target="#upload-form"
			hx-swap="innerHTML"
			hx-encoding="multipart/form-data"
			hx-indicator="#upload-spinner"
			class="space-y-6"
		>
			<!-- File Input -->
			<div>
				<label for="file" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">
					Select File
				</label>
				<div class="relative">
					<input
						type="file"
						id="file"
						name="file"
						required
						class="block w-full text-sm text-gray-900 dark:text-gray-100
							file:mr-4 file:py-3 file:px-6
							file:rounded-lg file:border-0
							file:text-sm file:font-semibold
							file:bg-primary-50 file:text-primary-700
							dark:file:bg-primary-900/30 dark:file:text-primary-400
							hover:file:bg-primary-100 dark:hover:file:bg-primary-900/50
							file:cursor-pointer file:transition-colors
							border border-gray-300 dark:border-gray-600 rounded-lg
							bg-white dark:bg-gray-700
							focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent
							cursor-pointer"
					/>
				</div>
				<p class="mt-2 text-xs text-gray-500 dark:text-gray-400">
					Supported formats: PDF, Images, Documents. Max size: 50MB
				</p>
			</div>

			<!-- Action Buttons -->
			<div class="flex items-center space-x-3 pt-4">
				<button
					type="submit"
					class="flex-1 inline-flex justify-center items-center px-6 py-3 bg-gradient-to-r from-primary-600 to-primary-500 hover:from-primary-700 hover:to-primary-600 text-white font-medium rounded-lg shadow-lg hover:shadow-xl transition-all disabled:opacity-50 disabled:cursor-not-allowed"
				>
					<svg id="upload-spinner" class="htmx-indicator animate-spin -ml-1 mr-3 h-5 w-5 text-white" fill="none" viewBox="0 0 24 24">
						<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
						<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
					</svg>
					<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
					</svg>
					<span>Upload</span>
				</button>
				<button
					type="button"
					onclick="this.closest('div[id=upload-form]').innerHTML = ''"
					class="px-6 py-3 bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 font-medium rounded-lg transition-all"
				>
					Cancel
				</button>
			</div>
		</form>
	</div>
}

templ ShareForm(docID string) {
	<div id="share-modal" class="fixed inset-0 bg-black/50 dark:bg-black/70 backdrop-blur-sm overflow-y-auto h-full w-full flex items-center justify-center z-50 p-4 animate-fade-in"
		hx-target="this"
		hx-swap="outerHTML"
		onclick="if(event.target === this) this.remove()"
	>
		<div class="bg-white dark:bg-gray-800 rounded-2xl shadow-2xl max-w-lg w-full mx-4 border border-gray-200 dark:border-gray-700 animate-slide-in" onclick="event.stopPropagation()">
			<!-- Header -->
			<div class="flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700">
				<div class="flex items-center">
					<div class="w-10 h-10 bg-blue-100 dark:bg-blue-900/30 rounded-lg flex items-center justify-center mr-3">
						<svg class="w-6 h-6 text-blue-600 dark:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z"></path>
						</svg>
					</div>
					<div>
						<h3 class="text-xl font-semibold text-gray-900 dark:text-gray-100">Share Document</h3>
						<p class="text-sm text-gray-600 dark:text-gray-400">Create a secure sharing link</p>
					</div>
				</div>
				<button
					hx-get="/api/close-modal"
					hx-target="#share-modal"
					hx-swap="outerHTML"
					class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors"
					title="Close"
				>
					<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
					</svg>
				</button>
			</div>

			<!-- Form Content -->
			<form
				hx-post={fmt.Sprintf("/api/documents/%s/share", docID)}
				hx-target="#share-result"
				hx-swap="innerHTML"
				hx-encoding="application/x-www-form-urlencoded"
				hx-indicator="#share-spinner"
				class="p-6 space-y-6"
			>
				<!-- Expiration Time -->
				<div>
					<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">
						<div class="flex items-center">
							<svg class="w-4 h-4 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
							</svg>
							Link Expiration (optional, default: 24 hours)
						</div>
					</label>
					<div class="grid grid-cols-2 gap-3">
						<div>
							<input
								type="number"
								id="expire_days"
								name="expire_days"
								min="0"
								max="365"
								placeholder="Days"
								class="block w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all"
							/>
							<p class="mt-1 text-xs text-gray-500 dark:text-gray-400">Days (0-365)</p>
						</div>
						<div>
							<input
								type="number"
								id="expire_hours"
								name="expire_hours"
								min="0"
								max="23"
								placeholder="Hours"
								class="block w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all"
							/>
							<p class="mt-1 text-xs text-gray-500 dark:text-gray-400">Hours (0-23)</p>
						</div>
					</div>
					<p class="mt-2 text-xs text-gray-500 dark:text-gray-400 flex items-center">
						<svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
							<path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
						</svg>
						Example: 2 days and 12 hours, or just 3 hours
					</p>
				</div>

				<!-- Max Access Count -->
				<div>
					<label for="max_access" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">
						<div class="flex items-center">
							<svg class="w-4 h-4 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
							</svg>
							Maximum Access Count (optional)
						</div>
					</label>
					<input
						type="number"
						id="max_access"
						name="max_access"
						min="1"
						placeholder="Unlimited if not specified"
						class="block w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all"
					/>
					<p class="mt-2 text-xs text-gray-500 dark:text-gray-400">Limit how many times the link can be accessed</p>
				</div>

				<!-- Password Protection -->
				<div>
					<label for="password" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">
						<div class="flex items-center">
							<svg class="w-4 h-4 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
							</svg>
							Password Protection (optional)
						</div>
					</label>
					<input
						type="password"
						id="password"
						name="password"
						placeholder="Add password for extra security"
						class="block w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all"
					/>
					<p class="mt-2 text-xs text-gray-500 dark:text-gray-400">Recipients will need this password to access the document</p>
				</div>

				<!-- Share Result -->
				<div id="share-result" class="empty:hidden"></div>

				<!-- Action Buttons -->
				<div class="flex items-center space-x-3 pt-4 border-t border-gray-200 dark:border-gray-700">
					<button
						type="submit"
						class="flex-1 inline-flex justify-center items-center px-6 py-3 bg-gradient-to-r from-blue-600 to-blue-500 hover:from-blue-700 hover:to-blue-600 text-white font-medium rounded-lg shadow-lg hover:shadow-xl transition-all disabled:opacity-50 disabled:cursor-not-allowed"
					>
						<svg id="share-spinner" class="htmx-indicator animate-spin -ml-1 mr-3 h-5 w-5 text-white" fill="none" viewBox="0 0 24 24">
							<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
							<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
						</svg>
						<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"></path>
						</svg>
						<span>Create Share Link</span>
					</button>
					<button
						type="button"
						hx-get="/api/close-modal"
						hx-target="#share-modal"
						hx-swap="outerHTML"
						class="px-6 py-3 bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 font-medium rounded-lg transition-all"
					>
						Cancel
					</button>
				</div>
			</form>
		</div>
	</div>
}
